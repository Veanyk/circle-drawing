import React from 'react';
import './Tasks.css';

const tasksData = [
  {
    id: 1,
    title: '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª',
    description: '–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à Telegram-–∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å 10 —Ç–æ–∫–µ–Ω–æ–≤.',
    link: 'https://t.me/durov',
    tokens: 10,
    icon: 'üì¢',
    image: '3.png',
  },
  {
    id: 2,
    title: '–ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –±—É—Å—Ç',
    description: '–ö—É–ø–∏—Ç–µ –ª—é–±–æ–π –±—É—Å—Ç –≤ –º–∞–≥–∞–∑–∏–Ω–µ –∏ –ø–æ–ª—É—á–∏—Ç–µ 20 —Ç–æ–∫–µ–Ω–æ–≤.',
    action: 'buyBoost',
    tokens: 20,
    icon: 'üõí',
    image: '4.png',
  },
  {
    id: 3,
    title: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞',
    description: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–≥–∞ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –∏ –ø–æ–ª—É—á–∏—Ç–µ 30 —Ç–æ–∫–µ–Ω–æ–≤.',
    action: 'inviteFriend',
    tokens: 30,
    icon: 'ü§ù',
    image: '5.png',
  },
];

const Tasks = React.memo(({ onTaskComplete, completedTasks, setCurrentTab }) => {
  const handleTaskClick = (task) => {
    if (completedTasks.includes(task.id)) {
      alert('–≠—Ç–æ –∑–∞–¥–∞–Ω–∏–µ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ.');
      return;
    }

    if (task.link) {
      const confirmAction = window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ?');
      if (confirmAction) {
        window.open(task.link, '_blank');
        onTaskComplete(task.id, task.tokens);
        alert(`–í—ã –ø–æ–ª—É—á–∏–ª–∏ ${task.tokens} —Ç–æ–∫–µ–Ω–æ–≤!`);
      }
    } else if (task.action === 'buyBoost') {
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≤–∫–ª–∞–¥–∫—É Shop
      setCurrentTab('shop');
    } else if (task.action === 'inviteFriend') {
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≤–∫–ª–∞–¥–∫—É Referrals
      setCurrentTab('referrals');
    }
  };


  return (
    <div className="tasks-container">
      <h3>–ó–∞–¥–∞–Ω–∏—è</h3>
      {tasksData.map((task) => (
        <div
          key={task.id}
          className={`task-card ${completedTasks.includes(task.id) ? 'completed' : ''}`}
        >
          <img
            src={process.env.PUBLIC_URL + `/assets/${task.image}`}
            alt={task.title}
            className="task-image"
            loading="lazy"
          />
          <div className="task-content">
            <h4>{task.title}</h4>
            <p>{task.description}</p>
            <p>–ù–∞–≥—Ä–∞–¥–∞: {task.tokens} —Ç–æ–∫–µ–Ω–æ–≤</p>
          </div>
          <button
            onClick={() => handleTaskClick(task)}
            disabled={completedTasks.includes(task.id)}
            className={`task-button ${completedTasks.includes(task.id) ? 'completed' : ''}`}
          >
            {completedTasks.includes(task.id) ? '–í—ã–ø–æ–ª–Ω–µ–Ω–æ' : '–í—ã–ø–æ–ª–Ω–∏—Ç—å'}
          </button>
        </div>
      ))}
    </div>
  );
});

export default Tasks;
